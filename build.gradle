plugins {
    id 'org.springframework.boot' version '3.4.3'  // Ensure this is the same version you're using
    id 'java'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'com.google.protobuf' version '0.8.18'  // For protobuf generation
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'  // Your Java version (21 as specified)

repositories {
    mavenCentral()
}

dependencies {
    // gRPC dependencies
    implementation 'io.grpc:grpc-netty:1.36.0'
    implementation 'io.grpc:grpc-protobuf:1.36.0'
    implementation 'io.grpc:grpc-stub:1.36.0'

    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.8.5'
    implementation 'org.postgresql:postgresql'
    implementation 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.12'  // Latest protoc version
    }
    generateProtoTasks {
        all()*.builtins {
            java {
                option 'lite'
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

bootRun {
    sourceResources sourceSets.main
}

